<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coin.mapper.NotificationsMapper">
  <resultMap id="BaseResultMap" type="com.coin.entity.Notifications">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="notifiable_type" jdbcType="VARCHAR" property="notifiableType" />
    <result column="notifiable_id" jdbcType="BIGINT" property="notifiableId" />
    <result column="data" jdbcType="VARCHAR" property="data" />
    <result column="read_at" jdbcType="TIMESTAMP" property="readAt" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `type`, notifiable_type, notifiable_id, `data`, read_at, created_at, updated_at
  </sql>
  <select id="selectByExample" parameterType="com.coin.entity.NotificationsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from notifications
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from notifications
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from notifications
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.coin.entity.NotificationsExample">
    delete from notifications
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.coin.entity.Notifications">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into notifications (`type`, notifiable_type, notifiable_id, 
      `data`, read_at, created_at, 
      updated_at)
    values (#{type,jdbcType=VARCHAR}, #{notifiableType,jdbcType=VARCHAR}, #{notifiableId,jdbcType=BIGINT}, 
      #{data,jdbcType=VARCHAR}, #{readAt,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.coin.entity.Notifications">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into notifications
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        `id`,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="notifiableType != null">
        notifiable_type,
      </if>
      <if test="notifiableId != null">
        notifiable_id,
      </if>
      <if test="data != null">
        `data`,
      </if>
      <if test="readAt != null">
        read_at,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="notifiableType != null">
        #{notifiableType,jdbcType=VARCHAR},
      </if>
      <if test="notifiableId != null">
        #{notifiableId,jdbcType=BIGINT},
      </if>
      <if test="data != null">
        #{data,jdbcType=VARCHAR},
      </if>
      <if test="readAt != null">
        #{readAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.coin.entity.NotificationsExample" resultType="java.lang.Long">
    select count(*) from notifications
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update notifications
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=CHAR},
      </if>
      <if test="row.type != null">
        `type` = #{row.type,jdbcType=VARCHAR},
      </if>
      <if test="row.notifiableType != null">
        notifiable_type = #{row.notifiableType,jdbcType=VARCHAR},
      </if>
      <if test="row.notifiableId != null">
        notifiable_id = #{row.notifiableId,jdbcType=BIGINT},
      </if>
      <if test="row.data != null">
        `data` = #{row.data,jdbcType=VARCHAR},
      </if>
      <if test="row.readAt != null">
        read_at = #{row.readAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.createdAt != null">
        created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updatedAt != null">
        updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update notifications
    set id = #{row.id,jdbcType=CHAR},
      `type` = #{row.type,jdbcType=VARCHAR},
      notifiable_type = #{row.notifiableType,jdbcType=VARCHAR},
      notifiable_id = #{row.notifiableId,jdbcType=BIGINT},
      `data` = #{row.data,jdbcType=VARCHAR},
      read_at = #{row.readAt,jdbcType=TIMESTAMP},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.coin.entity.Notifications">
    update notifications
    <set>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="notifiableType != null">
        notifiable_type = #{notifiableType,jdbcType=VARCHAR},
      </if>
      <if test="notifiableId != null">
        notifiable_id = #{notifiableId,jdbcType=BIGINT},
      </if>
      <if test="data != null">
        `data` = #{data,jdbcType=VARCHAR},
      </if>
      <if test="readAt != null">
        read_at = #{readAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coin.entity.Notifications">
    update notifications
    set `type` = #{type,jdbcType=VARCHAR},
      notifiable_type = #{notifiableType,jdbcType=VARCHAR},
      notifiable_id = #{notifiableId,jdbcType=BIGINT},
      `data` = #{data,jdbcType=VARCHAR},
      read_at = #{readAt,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>