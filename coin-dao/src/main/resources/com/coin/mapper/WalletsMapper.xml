<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coin.mapper.WalletsMapper">
  <resultMap id="BaseResultMap" type="com.coin.entity.Wallets">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="holder_type" jdbcType="VARCHAR" property="holderType" />
    <result column="holder_id" jdbcType="BIGINT" property="holderId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="slug" jdbcType="VARCHAR" property="slug" />
    <result column="uuid" jdbcType="CHAR" property="uuid" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="meta" jdbcType="VARCHAR" property="meta" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="decimal_places" jdbcType="SMALLINT" property="decimalPlaces" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, holder_type, holder_id, name, slug, uuid, description, meta, balance, decimal_places, 
    created_at, updated_at
  </sql>
  <select id="selectByExample" parameterType="com.coin.entity.WalletsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from wallets
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wallets
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from wallets
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.coin.entity.WalletsExample">
    delete from wallets
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.coin.entity.Wallets">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into wallets (holder_type, holder_id, name, 
      slug, uuid, description, 
      meta, balance, decimal_places, 
      created_at, updated_at)
    values (#{holderType,jdbcType=VARCHAR}, #{holderId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{slug,jdbcType=VARCHAR}, #{uuid,jdbcType=CHAR}, #{description,jdbcType=VARCHAR}, 
      #{meta,jdbcType=VARCHAR}, #{balance,jdbcType=DECIMAL}, #{decimalPlaces,jdbcType=SMALLINT}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.coin.entity.Wallets">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into wallets
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="holderType != null">
        holder_type,
      </if>
      <if test="holderId != null">
        holder_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="slug != null">
        slug,
      </if>
      <if test="uuid != null">
        uuid,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="meta != null">
        meta,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="decimalPlaces != null">
        decimal_places,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="holderType != null">
        #{holderType,jdbcType=VARCHAR},
      </if>
      <if test="holderId != null">
        #{holderId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="slug != null">
        #{slug,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=CHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="meta != null">
        #{meta,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="decimalPlaces != null">
        #{decimalPlaces,jdbcType=SMALLINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.coin.entity.WalletsExample" resultType="java.lang.Long">
    select count(*) from wallets
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update wallets
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.holderType != null">
        holder_type = #{row.holderType,jdbcType=VARCHAR},
      </if>
      <if test="row.holderId != null">
        holder_id = #{row.holderId,jdbcType=BIGINT},
      </if>
      <if test="row.name != null">
        name = #{row.name,jdbcType=VARCHAR},
      </if>
      <if test="row.slug != null">
        slug = #{row.slug,jdbcType=VARCHAR},
      </if>
      <if test="row.uuid != null">
        uuid = #{row.uuid,jdbcType=CHAR},
      </if>
      <if test="row.description != null">
        description = #{row.description,jdbcType=VARCHAR},
      </if>
      <if test="row.meta != null">
        meta = #{row.meta,jdbcType=VARCHAR},
      </if>
      <if test="row.balance != null">
        balance = #{row.balance,jdbcType=DECIMAL},
      </if>
      <if test="row.decimalPlaces != null">
        decimal_places = #{row.decimalPlaces,jdbcType=SMALLINT},
      </if>
      <if test="row.createdAt != null">
        created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updatedAt != null">
        updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update wallets
    set id = #{row.id,jdbcType=BIGINT},
      holder_type = #{row.holderType,jdbcType=VARCHAR},
      holder_id = #{row.holderId,jdbcType=BIGINT},
      name = #{row.name,jdbcType=VARCHAR},
      slug = #{row.slug,jdbcType=VARCHAR},
      uuid = #{row.uuid,jdbcType=CHAR},
      description = #{row.description,jdbcType=VARCHAR},
      meta = #{row.meta,jdbcType=VARCHAR},
      balance = #{row.balance,jdbcType=DECIMAL},
      decimal_places = #{row.decimalPlaces,jdbcType=SMALLINT},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.coin.entity.Wallets">
    update wallets
    <set>
      <if test="holderType != null">
        holder_type = #{holderType,jdbcType=VARCHAR},
      </if>
      <if test="holderId != null">
        holder_id = #{holderId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="slug != null">
        slug = #{slug,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=CHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="meta != null">
        meta = #{meta,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="decimalPlaces != null">
        decimal_places = #{decimalPlaces,jdbcType=SMALLINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coin.entity.Wallets">
    update wallets
    set holder_type = #{holderType,jdbcType=VARCHAR},
      holder_id = #{holderId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      slug = #{slug,jdbcType=VARCHAR},
      uuid = #{uuid,jdbcType=CHAR},
      description = #{description,jdbcType=VARCHAR},
      meta = #{meta,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=DECIMAL},
      decimal_places = #{decimalPlaces,jdbcType=SMALLINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>