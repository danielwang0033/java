<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coin.mapper.ActivityPrizeMapper">
  <resultMap id="BaseResultMap" type="com.coin.entity.ActivityPrize">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="activity_id" jdbcType="BIGINT" property="activityId" />
    <result column="activity_type" jdbcType="INTEGER" property="activityType" />
    <result column="prize_type" jdbcType="INTEGER" property="prizeType" />
    <result column="prize_name" jdbcType="VARCHAR" property="prizeName" />
    <result column="prize_quantity" jdbcType="INTEGER" property="prizeQuantity" />
    <result column="prize_image" jdbcType="VARCHAR" property="prizeImage" />
    <result column="probability" jdbcType="DECIMAL" property="probability" />
    <result column="check_in_type" jdbcType="INTEGER" property="checkInType" />
    <result column="check_in_days" jdbcType="INTEGER" property="checkInDays" />
    <result column="check_in_date" jdbcType="VARCHAR" property="checkInDate" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, activity_id, activity_type, prize_type, prize_name, prize_quantity, prize_image, 
    probability, check_in_type, check_in_days, check_in_date, created_by, created_at
  </sql>
  <select id="selectByExample" parameterType="com.coin.entity.ActivityPrizeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from activity_prize
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from activity_prize
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from activity_prize
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.coin.entity.ActivityPrizeExample">
    delete from activity_prize
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.coin.entity.ActivityPrize">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into activity_prize (activity_id, activity_type, prize_type, 
      prize_name, prize_quantity, prize_image, 
      probability, check_in_type, check_in_days, 
      check_in_date, created_by, created_at
      )
    values (#{activityId,jdbcType=BIGINT}, #{activityType,jdbcType=INTEGER}, #{prizeType,jdbcType=INTEGER}, 
      #{prizeName,jdbcType=VARCHAR}, #{prizeQuantity,jdbcType=INTEGER}, #{prizeImage,jdbcType=VARCHAR}, 
      #{probability,jdbcType=DECIMAL}, #{checkInType,jdbcType=INTEGER}, #{checkInDays,jdbcType=INTEGER}, 
      #{checkInDate,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.coin.entity.ActivityPrize">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into activity_prize
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="activityType != null">
        activity_type,
      </if>
      <if test="prizeType != null">
        prize_type,
      </if>
      <if test="prizeName != null">
        prize_name,
      </if>
      <if test="prizeQuantity != null">
        prize_quantity,
      </if>
      <if test="prizeImage != null">
        prize_image,
      </if>
      <if test="probability != null">
        probability,
      </if>
      <if test="checkInType != null">
        check_in_type,
      </if>
      <if test="checkInDays != null">
        check_in_days,
      </if>
      <if test="checkInDate != null">
        check_in_date,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="activityId != null">
        #{activityId,jdbcType=BIGINT},
      </if>
      <if test="activityType != null">
        #{activityType,jdbcType=INTEGER},
      </if>
      <if test="prizeType != null">
        #{prizeType,jdbcType=INTEGER},
      </if>
      <if test="prizeName != null">
        #{prizeName,jdbcType=VARCHAR},
      </if>
      <if test="prizeQuantity != null">
        #{prizeQuantity,jdbcType=INTEGER},
      </if>
      <if test="prizeImage != null">
        #{prizeImage,jdbcType=VARCHAR},
      </if>
      <if test="probability != null">
        #{probability,jdbcType=DECIMAL},
      </if>
      <if test="checkInType != null">
        #{checkInType,jdbcType=INTEGER},
      </if>
      <if test="checkInDays != null">
        #{checkInDays,jdbcType=INTEGER},
      </if>
      <if test="checkInDate != null">
        #{checkInDate,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.coin.entity.ActivityPrizeExample" resultType="java.lang.Long">
    select count(*) from activity_prize
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update activity_prize
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.activityId != null">
        activity_id = #{row.activityId,jdbcType=BIGINT},
      </if>
      <if test="row.activityType != null">
        activity_type = #{row.activityType,jdbcType=INTEGER},
      </if>
      <if test="row.prizeType != null">
        prize_type = #{row.prizeType,jdbcType=INTEGER},
      </if>
      <if test="row.prizeName != null">
        prize_name = #{row.prizeName,jdbcType=VARCHAR},
      </if>
      <if test="row.prizeQuantity != null">
        prize_quantity = #{row.prizeQuantity,jdbcType=INTEGER},
      </if>
      <if test="row.prizeImage != null">
        prize_image = #{row.prizeImage,jdbcType=VARCHAR},
      </if>
      <if test="row.probability != null">
        probability = #{row.probability,jdbcType=DECIMAL},
      </if>
      <if test="row.checkInType != null">
        check_in_type = #{row.checkInType,jdbcType=INTEGER},
      </if>
      <if test="row.checkInDays != null">
        check_in_days = #{row.checkInDays,jdbcType=INTEGER},
      </if>
      <if test="row.checkInDate != null">
        check_in_date = #{row.checkInDate,jdbcType=VARCHAR},
      </if>
      <if test="row.createdBy != null">
        created_by = #{row.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="row.createdAt != null">
        created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update activity_prize
    set id = #{row.id,jdbcType=BIGINT},
      activity_id = #{row.activityId,jdbcType=BIGINT},
      activity_type = #{row.activityType,jdbcType=INTEGER},
      prize_type = #{row.prizeType,jdbcType=INTEGER},
      prize_name = #{row.prizeName,jdbcType=VARCHAR},
      prize_quantity = #{row.prizeQuantity,jdbcType=INTEGER},
      prize_image = #{row.prizeImage,jdbcType=VARCHAR},
      probability = #{row.probability,jdbcType=DECIMAL},
      check_in_type = #{row.checkInType,jdbcType=INTEGER},
      check_in_days = #{row.checkInDays,jdbcType=INTEGER},
      check_in_date = #{row.checkInDate,jdbcType=VARCHAR},
      created_by = #{row.createdBy,jdbcType=VARCHAR},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.coin.entity.ActivityPrize">
    update activity_prize
    <set>
      <if test="activityId != null">
        activity_id = #{activityId,jdbcType=BIGINT},
      </if>
      <if test="activityType != null">
        activity_type = #{activityType,jdbcType=INTEGER},
      </if>
      <if test="prizeType != null">
        prize_type = #{prizeType,jdbcType=INTEGER},
      </if>
      <if test="prizeName != null">
        prize_name = #{prizeName,jdbcType=VARCHAR},
      </if>
      <if test="prizeQuantity != null">
        prize_quantity = #{prizeQuantity,jdbcType=INTEGER},
      </if>
      <if test="prizeImage != null">
        prize_image = #{prizeImage,jdbcType=VARCHAR},
      </if>
      <if test="probability != null">
        probability = #{probability,jdbcType=DECIMAL},
      </if>
      <if test="checkInType != null">
        check_in_type = #{checkInType,jdbcType=INTEGER},
      </if>
      <if test="checkInDays != null">
        check_in_days = #{checkInDays,jdbcType=INTEGER},
      </if>
      <if test="checkInDate != null">
        check_in_date = #{checkInDate,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coin.entity.ActivityPrize">
    update activity_prize
    set activity_id = #{activityId,jdbcType=BIGINT},
      activity_type = #{activityType,jdbcType=INTEGER},
      prize_type = #{prizeType,jdbcType=INTEGER},
      prize_name = #{prizeName,jdbcType=VARCHAR},
      prize_quantity = #{prizeQuantity,jdbcType=INTEGER},
      prize_image = #{prizeImage,jdbcType=VARCHAR},
      probability = #{probability,jdbcType=DECIMAL},
      check_in_type = #{checkInType,jdbcType=INTEGER},
      check_in_days = #{checkInDays,jdbcType=INTEGER},
      check_in_date = #{checkInDate,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>