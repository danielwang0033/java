<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coin.mapper.RoomsMapper">
  <resultMap id="BaseResultMap" type="com.coin.entity.Rooms">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="rid" jdbcType="VARCHAR" property="rid" />
    <result column="rocket_user_id" jdbcType="VARCHAR" property="rocketUserId" />
    <result column="owner" jdbcType="INTEGER" property="owner" />
    <result column="mute" jdbcType="INTEGER" property="mute" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, rid, rocket_user_id, `owner`, mute, updated_at, created_at
  </sql>
  <select id="selectByExample" parameterType="com.coin.entity.RoomsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rooms
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rooms
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from rooms
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.coin.entity.RoomsExample">
    delete from rooms
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.coin.entity.Rooms">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into rooms (rid, rocket_user_id, `owner`, 
      mute, updated_at, created_at
      )
    values (#{rid,jdbcType=VARCHAR}, #{rocketUserId,jdbcType=VARCHAR}, #{owner,jdbcType=INTEGER}, 
      #{mute,jdbcType=INTEGER}, #{updatedAt,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.coin.entity.Rooms">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into rooms
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rid != null">
        rid,
      </if>
      <if test="rocketUserId != null">
        rocket_user_id,
      </if>
      <if test="owner != null">
        `owner`,
      </if>
      <if test="mute != null">
        mute,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rid != null">
        #{rid,jdbcType=VARCHAR},
      </if>
      <if test="rocketUserId != null">
        #{rocketUserId,jdbcType=VARCHAR},
      </if>
      <if test="owner != null">
        #{owner,jdbcType=INTEGER},
      </if>
      <if test="mute != null">
        #{mute,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.coin.entity.RoomsExample" resultType="java.lang.Long">
    select count(*) from rooms
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rooms
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.rid != null">
        rid = #{row.rid,jdbcType=VARCHAR},
      </if>
      <if test="row.rocketUserId != null">
        rocket_user_id = #{row.rocketUserId,jdbcType=VARCHAR},
      </if>
      <if test="row.owner != null">
        `owner` = #{row.owner,jdbcType=INTEGER},
      </if>
      <if test="row.mute != null">
        mute = #{row.mute,jdbcType=INTEGER},
      </if>
      <if test="row.updatedAt != null">
        updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.createdAt != null">
        created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rooms
    set id = #{row.id,jdbcType=INTEGER},
      rid = #{row.rid,jdbcType=VARCHAR},
      rocket_user_id = #{row.rocketUserId,jdbcType=VARCHAR},
      `owner` = #{row.owner,jdbcType=INTEGER},
      mute = #{row.mute,jdbcType=INTEGER},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.coin.entity.Rooms">
    update rooms
    <set>
      <if test="rid != null">
        rid = #{rid,jdbcType=VARCHAR},
      </if>
      <if test="rocketUserId != null">
        rocket_user_id = #{rocketUserId,jdbcType=VARCHAR},
      </if>
      <if test="owner != null">
        `owner` = #{owner,jdbcType=INTEGER},
      </if>
      <if test="mute != null">
        mute = #{mute,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coin.entity.Rooms">
    update rooms
    set rid = #{rid,jdbcType=VARCHAR},
      rocket_user_id = #{rocketUserId,jdbcType=VARCHAR},
      `owner` = #{owner,jdbcType=INTEGER},
      mute = #{mute,jdbcType=INTEGER},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>