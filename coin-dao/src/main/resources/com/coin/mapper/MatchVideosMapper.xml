<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coin.mapper.MatchVideosMapper">
  <resultMap id="BaseResultMap" type="com.coin.entity.MatchVideos">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="matchId" jdbcType="VARCHAR" property="matchid" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="streamId" jdbcType="INTEGER" property="streamid" />
    <result column="pushing" jdbcType="INTEGER" property="pushing" />
    <result column="streamType" jdbcType="INTEGER" property="streamtype" />
    <result column="streamName" jdbcType="VARCHAR" property="streamname" />
    <result column="m3u8" jdbcType="VARCHAR" property="m3u8" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.coin.entity.MatchVideos">
    <result column="line" jdbcType="LONGVARCHAR" property="line" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, matchId, created_at, updated_at, streamId, pushing, streamType, streamName, m3u8
  </sql>
  <sql id="Blob_Column_List">
    line
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.coin.entity.MatchVideosExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from match_videos
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.coin.entity.MatchVideosExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from match_videos
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from match_videos
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from match_videos
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.coin.entity.MatchVideosExample">
    delete from match_videos
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.coin.entity.MatchVideos">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into match_videos (matchId, created_at, updated_at, 
      streamId, pushing, streamType, 
      streamName, m3u8, line
      )
    values (#{matchid,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{streamid,jdbcType=INTEGER}, #{pushing,jdbcType=INTEGER}, #{streamtype,jdbcType=INTEGER}, 
      #{streamname,jdbcType=VARCHAR}, #{m3u8,jdbcType=VARCHAR}, #{line,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.coin.entity.MatchVideos">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into match_videos
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="matchid != null">
        matchId,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="streamid != null">
        streamId,
      </if>
      <if test="pushing != null">
        pushing,
      </if>
      <if test="streamtype != null">
        streamType,
      </if>
      <if test="streamname != null">
        streamName,
      </if>
      <if test="m3u8 != null">
        m3u8,
      </if>
      <if test="line != null">
        line,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="matchid != null">
        #{matchid,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="streamid != null">
        #{streamid,jdbcType=INTEGER},
      </if>
      <if test="pushing != null">
        #{pushing,jdbcType=INTEGER},
      </if>
      <if test="streamtype != null">
        #{streamtype,jdbcType=INTEGER},
      </if>
      <if test="streamname != null">
        #{streamname,jdbcType=VARCHAR},
      </if>
      <if test="m3u8 != null">
        #{m3u8,jdbcType=VARCHAR},
      </if>
      <if test="line != null">
        #{line,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.coin.entity.MatchVideosExample" resultType="java.lang.Long">
    select count(*) from match_videos
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update match_videos
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.matchid != null">
        matchId = #{row.matchid,jdbcType=VARCHAR},
      </if>
      <if test="row.createdAt != null">
        created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updatedAt != null">
        updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.streamid != null">
        streamId = #{row.streamid,jdbcType=INTEGER},
      </if>
      <if test="row.pushing != null">
        pushing = #{row.pushing,jdbcType=INTEGER},
      </if>
      <if test="row.streamtype != null">
        streamType = #{row.streamtype,jdbcType=INTEGER},
      </if>
      <if test="row.streamname != null">
        streamName = #{row.streamname,jdbcType=VARCHAR},
      </if>
      <if test="row.m3u8 != null">
        m3u8 = #{row.m3u8,jdbcType=VARCHAR},
      </if>
      <if test="row.line != null">
        line = #{row.line,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update match_videos
    set id = #{row.id,jdbcType=INTEGER},
      matchId = #{row.matchid,jdbcType=VARCHAR},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      streamId = #{row.streamid,jdbcType=INTEGER},
      pushing = #{row.pushing,jdbcType=INTEGER},
      streamType = #{row.streamtype,jdbcType=INTEGER},
      streamName = #{row.streamname,jdbcType=VARCHAR},
      m3u8 = #{row.m3u8,jdbcType=VARCHAR},
      line = #{row.line,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update match_videos
    set id = #{row.id,jdbcType=INTEGER},
      matchId = #{row.matchid,jdbcType=VARCHAR},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      streamId = #{row.streamid,jdbcType=INTEGER},
      pushing = #{row.pushing,jdbcType=INTEGER},
      streamType = #{row.streamtype,jdbcType=INTEGER},
      streamName = #{row.streamname,jdbcType=VARCHAR},
      m3u8 = #{row.m3u8,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.coin.entity.MatchVideos">
    update match_videos
    <set>
      <if test="matchid != null">
        matchId = #{matchid,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="streamid != null">
        streamId = #{streamid,jdbcType=INTEGER},
      </if>
      <if test="pushing != null">
        pushing = #{pushing,jdbcType=INTEGER},
      </if>
      <if test="streamtype != null">
        streamType = #{streamtype,jdbcType=INTEGER},
      </if>
      <if test="streamname != null">
        streamName = #{streamname,jdbcType=VARCHAR},
      </if>
      <if test="m3u8 != null">
        m3u8 = #{m3u8,jdbcType=VARCHAR},
      </if>
      <if test="line != null">
        line = #{line,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.coin.entity.MatchVideos">
    update match_videos
    set matchId = #{matchid,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      streamId = #{streamid,jdbcType=INTEGER},
      pushing = #{pushing,jdbcType=INTEGER},
      streamType = #{streamtype,jdbcType=INTEGER},
      streamName = #{streamname,jdbcType=VARCHAR},
      m3u8 = #{m3u8,jdbcType=VARCHAR},
      line = #{line,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coin.entity.MatchVideos">
    update match_videos
    set matchId = #{matchid,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      streamId = #{streamid,jdbcType=INTEGER},
      pushing = #{pushing,jdbcType=INTEGER},
      streamType = #{streamtype,jdbcType=INTEGER},
      streamName = #{streamname,jdbcType=VARCHAR},
      m3u8 = #{m3u8,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>