<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coin.mapper.ActivityNameCardMapper">
  <resultMap id="BaseResultMap" type="com.coin.entity.ActivityNameCard">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="activity_id" jdbcType="BIGINT" property="activityId" />
    <result column="change_type" jdbcType="INTEGER" property="changeType" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="before_change" jdbcType="INTEGER" property="beforeChange" />
    <result column="after_change" jdbcType="INTEGER" property="afterChange" />
    <result column="change_quantity" jdbcType="INTEGER" property="changeQuantity" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, activity_id, change_type, user_id, before_change, after_change, change_quantity, 
    remark, created_by, created_at
  </sql>
  <select id="selectByExample" parameterType="com.coin.entity.ActivityNameCardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from activity_name_card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from activity_name_card
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from activity_name_card
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.coin.entity.ActivityNameCardExample">
    delete from activity_name_card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.coin.entity.ActivityNameCard">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into activity_name_card (activity_id, change_type, user_id, 
      before_change, after_change, change_quantity, 
      remark, created_by, created_at
      )
    values (#{activityId,jdbcType=BIGINT}, #{changeType,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, 
      #{beforeChange,jdbcType=INTEGER}, #{afterChange,jdbcType=INTEGER}, #{changeQuantity,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.coin.entity.ActivityNameCard">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into activity_name_card
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="changeType != null">
        change_type,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="beforeChange != null">
        before_change,
      </if>
      <if test="afterChange != null">
        after_change,
      </if>
      <if test="changeQuantity != null">
        change_quantity,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="activityId != null">
        #{activityId,jdbcType=BIGINT},
      </if>
      <if test="changeType != null">
        #{changeType,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="beforeChange != null">
        #{beforeChange,jdbcType=INTEGER},
      </if>
      <if test="afterChange != null">
        #{afterChange,jdbcType=INTEGER},
      </if>
      <if test="changeQuantity != null">
        #{changeQuantity,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.coin.entity.ActivityNameCardExample" resultType="java.lang.Long">
    select count(*) from activity_name_card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update activity_name_card
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.activityId != null">
        activity_id = #{row.activityId,jdbcType=BIGINT},
      </if>
      <if test="row.changeType != null">
        change_type = #{row.changeType,jdbcType=INTEGER},
      </if>
      <if test="row.userId != null">
        user_id = #{row.userId,jdbcType=BIGINT},
      </if>
      <if test="row.beforeChange != null">
        before_change = #{row.beforeChange,jdbcType=INTEGER},
      </if>
      <if test="row.afterChange != null">
        after_change = #{row.afterChange,jdbcType=INTEGER},
      </if>
      <if test="row.changeQuantity != null">
        change_quantity = #{row.changeQuantity,jdbcType=INTEGER},
      </if>
      <if test="row.remark != null">
        remark = #{row.remark,jdbcType=VARCHAR},
      </if>
      <if test="row.createdBy != null">
        created_by = #{row.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="row.createdAt != null">
        created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update activity_name_card
    set id = #{row.id,jdbcType=BIGINT},
      activity_id = #{row.activityId,jdbcType=BIGINT},
      change_type = #{row.changeType,jdbcType=INTEGER},
      user_id = #{row.userId,jdbcType=BIGINT},
      before_change = #{row.beforeChange,jdbcType=INTEGER},
      after_change = #{row.afterChange,jdbcType=INTEGER},
      change_quantity = #{row.changeQuantity,jdbcType=INTEGER},
      remark = #{row.remark,jdbcType=VARCHAR},
      created_by = #{row.createdBy,jdbcType=VARCHAR},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.coin.entity.ActivityNameCard">
    update activity_name_card
    <set>
      <if test="activityId != null">
        activity_id = #{activityId,jdbcType=BIGINT},
      </if>
      <if test="changeType != null">
        change_type = #{changeType,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="beforeChange != null">
        before_change = #{beforeChange,jdbcType=INTEGER},
      </if>
      <if test="afterChange != null">
        after_change = #{afterChange,jdbcType=INTEGER},
      </if>
      <if test="changeQuantity != null">
        change_quantity = #{changeQuantity,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coin.entity.ActivityNameCard">
    update activity_name_card
    set activity_id = #{activityId,jdbcType=BIGINT},
      change_type = #{changeType,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=BIGINT},
      before_change = #{beforeChange,jdbcType=INTEGER},
      after_change = #{afterChange,jdbcType=INTEGER},
      change_quantity = #{changeQuantity,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>