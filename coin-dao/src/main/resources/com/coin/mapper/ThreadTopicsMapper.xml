<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coin.mapper.ThreadTopicsMapper">
  <resultMap id="BaseResultMap" type="com.coin.entity.ThreadTopics">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="forum_id" jdbcType="BIGINT" property="forumId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="color" jdbcType="VARCHAR" property="color" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="thread_count" jdbcType="INTEGER" property="threadCount" />
    <result column="only_admin" jdbcType="INTEGER" property="onlyAdmin" />
    <result column="read_count" jdbcType="INTEGER" property="readCount" />
    <result column="is_hot" jdbcType="INTEGER" property="isHot" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, forum_id, `name`, pic, color, `desc`, `status`, thread_count, only_admin, read_count, 
    is_hot, sort, created_at, updated_at
  </sql>
  <select id="selectByExample" parameterType="com.coin.entity.ThreadTopicsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `thread_topics`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `thread_topics`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `thread_topics`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.coin.entity.ThreadTopicsExample">
    delete from `thread_topics`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.coin.entity.ThreadTopics">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `thread_topics` (forum_id, `name`, pic, 
      color, `desc`, `status`, 
      thread_count, only_admin, read_count, 
      is_hot, sort, created_at, 
      updated_at)
    values (#{forumId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, 
      #{color,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{threadCount,jdbcType=INTEGER}, #{onlyAdmin,jdbcType=INTEGER}, #{readCount,jdbcType=INTEGER}, 
      #{isHot,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.coin.entity.ThreadTopics">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `thread_topics`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="forumId != null">
        forum_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="color != null">
        color,
      </if>
      <if test="desc != null">
        `desc`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="threadCount != null">
        thread_count,
      </if>
      <if test="onlyAdmin != null">
        only_admin,
      </if>
      <if test="readCount != null">
        read_count,
      </if>
      <if test="isHot != null">
        is_hot,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="forumId != null">
        #{forumId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="color != null">
        #{color,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="threadCount != null">
        #{threadCount,jdbcType=INTEGER},
      </if>
      <if test="onlyAdmin != null">
        #{onlyAdmin,jdbcType=INTEGER},
      </if>
      <if test="readCount != null">
        #{readCount,jdbcType=INTEGER},
      </if>
      <if test="isHot != null">
        #{isHot,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.coin.entity.ThreadTopicsExample" resultType="java.lang.Long">
    select count(*) from `thread_topics`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `thread_topics`
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.forumId != null">
        forum_id = #{row.forumId,jdbcType=BIGINT},
      </if>
      <if test="row.name != null">
        `name` = #{row.name,jdbcType=VARCHAR},
      </if>
      <if test="row.pic != null">
        pic = #{row.pic,jdbcType=VARCHAR},
      </if>
      <if test="row.color != null">
        color = #{row.color,jdbcType=VARCHAR},
      </if>
      <if test="row.desc != null">
        `desc` = #{row.desc,jdbcType=VARCHAR},
      </if>
      <if test="row.status != null">
        `status` = #{row.status,jdbcType=INTEGER},
      </if>
      <if test="row.threadCount != null">
        thread_count = #{row.threadCount,jdbcType=INTEGER},
      </if>
      <if test="row.onlyAdmin != null">
        only_admin = #{row.onlyAdmin,jdbcType=INTEGER},
      </if>
      <if test="row.readCount != null">
        read_count = #{row.readCount,jdbcType=INTEGER},
      </if>
      <if test="row.isHot != null">
        is_hot = #{row.isHot,jdbcType=INTEGER},
      </if>
      <if test="row.sort != null">
        sort = #{row.sort,jdbcType=INTEGER},
      </if>
      <if test="row.createdAt != null">
        created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updatedAt != null">
        updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `thread_topics`
    set id = #{row.id,jdbcType=BIGINT},
      forum_id = #{row.forumId,jdbcType=BIGINT},
      `name` = #{row.name,jdbcType=VARCHAR},
      pic = #{row.pic,jdbcType=VARCHAR},
      color = #{row.color,jdbcType=VARCHAR},
      `desc` = #{row.desc,jdbcType=VARCHAR},
      `status` = #{row.status,jdbcType=INTEGER},
      thread_count = #{row.threadCount,jdbcType=INTEGER},
      only_admin = #{row.onlyAdmin,jdbcType=INTEGER},
      read_count = #{row.readCount,jdbcType=INTEGER},
      is_hot = #{row.isHot,jdbcType=INTEGER},
      sort = #{row.sort,jdbcType=INTEGER},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.coin.entity.ThreadTopics">
    update `thread_topics`
    <set>
      <if test="forumId != null">
        forum_id = #{forumId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="color != null">
        color = #{color,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="threadCount != null">
        thread_count = #{threadCount,jdbcType=INTEGER},
      </if>
      <if test="onlyAdmin != null">
        only_admin = #{onlyAdmin,jdbcType=INTEGER},
      </if>
      <if test="readCount != null">
        read_count = #{readCount,jdbcType=INTEGER},
      </if>
      <if test="isHot != null">
        is_hot = #{isHot,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coin.entity.ThreadTopics">
    update `thread_topics`
    set forum_id = #{forumId,jdbcType=BIGINT},
      `name` = #{name,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      color = #{color,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      thread_count = #{threadCount,jdbcType=INTEGER},
      only_admin = #{onlyAdmin,jdbcType=INTEGER},
      read_count = #{readCount,jdbcType=INTEGER},
      is_hot = #{isHot,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>