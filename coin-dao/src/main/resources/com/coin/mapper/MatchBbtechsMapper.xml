<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coin.mapper.MatchBbtechsMapper">
  <resultMap id="BaseResultMap" type="com.coin.entity.MatchBbtechs">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="homeId" jdbcType="INTEGER" property="homeid" />
    <result column="homeBackboard" jdbcType="INTEGER" property="homebackboard" />
    <result column="homeFoul" jdbcType="INTEGER" property="homefoul" />
    <result column="homeThreeScore" jdbcType="INTEGER" property="homethreescore" />
    <result column="homeTwoScore" jdbcType="INTEGER" property="hometwoscore" />
    <result column="homePenalty" jdbcType="INTEGER" property="homepenalty" />
    <result column="homePenaltyRate" jdbcType="VARCHAR" property="homepenaltyrate" />
    <result column="homeBackboardF" jdbcType="INTEGER" property="homebackboardf" />
    <result column="homeBackboardB" jdbcType="INTEGER" property="homebackboardb" />
    <result column="homeAssists" jdbcType="INTEGER" property="homeassists" />
    <result column="homeSnatch" jdbcType="INTEGER" property="homesnatch" />
    <result column="homeBlock" jdbcType="INTEGER" property="homeblock" />
    <result column="homeFault" jdbcType="INTEGER" property="homefault" />
    <result column="awayId" jdbcType="INTEGER" property="awayid" />
    <result column="awayBackboard" jdbcType="INTEGER" property="awaybackboard" />
    <result column="awayFoul" jdbcType="INTEGER" property="awayfoul" />
    <result column="awayThreeScore" jdbcType="INTEGER" property="awaythreescore" />
    <result column="awayTwoScore" jdbcType="INTEGER" property="awaytwoscore" />
    <result column="awayPenalty" jdbcType="INTEGER" property="awaypenalty" />
    <result column="awayPenaltyRate" jdbcType="VARCHAR" property="awaypenaltyrate" />
    <result column="awayBackboardF" jdbcType="INTEGER" property="awaybackboardf" />
    <result column="awayBackboardB" jdbcType="INTEGER" property="awaybackboardb" />
    <result column="awayAssists" jdbcType="INTEGER" property="awayassists" />
    <result column="awaySnatch" jdbcType="INTEGER" property="awaysnatch" />
    <result column="awayBlock" jdbcType="INTEGER" property="awayblock" />
    <result column="awayFault" jdbcType="INTEGER" property="awayfault" />
    <result column="matchId" jdbcType="INTEGER" property="matchid" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, homeId, homeBackboard, homeFoul, homeThreeScore, homeTwoScore, homePenalty, homePenaltyRate, 
    homeBackboardF, homeBackboardB, homeAssists, homeSnatch, homeBlock, homeFault, awayId, 
    awayBackboard, awayFoul, awayThreeScore, awayTwoScore, awayPenalty, awayPenaltyRate, 
    awayBackboardF, awayBackboardB, awayAssists, awaySnatch, awayBlock, awayFault, matchId, 
    created_at, updated_at
  </sql>
  <select id="selectByExample" parameterType="com.coin.entity.MatchBbtechsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from match_bbtechs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from match_bbtechs
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from match_bbtechs
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.coin.entity.MatchBbtechsExample">
    delete from match_bbtechs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.coin.entity.MatchBbtechs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into match_bbtechs (homeId, homeBackboard, homeFoul, 
      homeThreeScore, homeTwoScore, homePenalty, 
      homePenaltyRate, homeBackboardF, homeBackboardB, 
      homeAssists, homeSnatch, homeBlock, 
      homeFault, awayId, awayBackboard, 
      awayFoul, awayThreeScore, awayTwoScore, 
      awayPenalty, awayPenaltyRate, awayBackboardF, 
      awayBackboardB, awayAssists, awaySnatch, 
      awayBlock, awayFault, matchId, 
      created_at, updated_at)
    values (#{homeid,jdbcType=INTEGER}, #{homebackboard,jdbcType=INTEGER}, #{homefoul,jdbcType=INTEGER}, 
      #{homethreescore,jdbcType=INTEGER}, #{hometwoscore,jdbcType=INTEGER}, #{homepenalty,jdbcType=INTEGER}, 
      #{homepenaltyrate,jdbcType=VARCHAR}, #{homebackboardf,jdbcType=INTEGER}, #{homebackboardb,jdbcType=INTEGER}, 
      #{homeassists,jdbcType=INTEGER}, #{homesnatch,jdbcType=INTEGER}, #{homeblock,jdbcType=INTEGER}, 
      #{homefault,jdbcType=INTEGER}, #{awayid,jdbcType=INTEGER}, #{awaybackboard,jdbcType=INTEGER}, 
      #{awayfoul,jdbcType=INTEGER}, #{awaythreescore,jdbcType=INTEGER}, #{awaytwoscore,jdbcType=INTEGER}, 
      #{awaypenalty,jdbcType=INTEGER}, #{awaypenaltyrate,jdbcType=VARCHAR}, #{awaybackboardf,jdbcType=INTEGER}, 
      #{awaybackboardb,jdbcType=INTEGER}, #{awayassists,jdbcType=INTEGER}, #{awaysnatch,jdbcType=INTEGER}, 
      #{awayblock,jdbcType=INTEGER}, #{awayfault,jdbcType=INTEGER}, #{matchid,jdbcType=INTEGER}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.coin.entity.MatchBbtechs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into match_bbtechs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="homeid != null">
        homeId,
      </if>
      <if test="homebackboard != null">
        homeBackboard,
      </if>
      <if test="homefoul != null">
        homeFoul,
      </if>
      <if test="homethreescore != null">
        homeThreeScore,
      </if>
      <if test="hometwoscore != null">
        homeTwoScore,
      </if>
      <if test="homepenalty != null">
        homePenalty,
      </if>
      <if test="homepenaltyrate != null">
        homePenaltyRate,
      </if>
      <if test="homebackboardf != null">
        homeBackboardF,
      </if>
      <if test="homebackboardb != null">
        homeBackboardB,
      </if>
      <if test="homeassists != null">
        homeAssists,
      </if>
      <if test="homesnatch != null">
        homeSnatch,
      </if>
      <if test="homeblock != null">
        homeBlock,
      </if>
      <if test="homefault != null">
        homeFault,
      </if>
      <if test="awayid != null">
        awayId,
      </if>
      <if test="awaybackboard != null">
        awayBackboard,
      </if>
      <if test="awayfoul != null">
        awayFoul,
      </if>
      <if test="awaythreescore != null">
        awayThreeScore,
      </if>
      <if test="awaytwoscore != null">
        awayTwoScore,
      </if>
      <if test="awaypenalty != null">
        awayPenalty,
      </if>
      <if test="awaypenaltyrate != null">
        awayPenaltyRate,
      </if>
      <if test="awaybackboardf != null">
        awayBackboardF,
      </if>
      <if test="awaybackboardb != null">
        awayBackboardB,
      </if>
      <if test="awayassists != null">
        awayAssists,
      </if>
      <if test="awaysnatch != null">
        awaySnatch,
      </if>
      <if test="awayblock != null">
        awayBlock,
      </if>
      <if test="awayfault != null">
        awayFault,
      </if>
      <if test="matchid != null">
        matchId,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="homeid != null">
        #{homeid,jdbcType=INTEGER},
      </if>
      <if test="homebackboard != null">
        #{homebackboard,jdbcType=INTEGER},
      </if>
      <if test="homefoul != null">
        #{homefoul,jdbcType=INTEGER},
      </if>
      <if test="homethreescore != null">
        #{homethreescore,jdbcType=INTEGER},
      </if>
      <if test="hometwoscore != null">
        #{hometwoscore,jdbcType=INTEGER},
      </if>
      <if test="homepenalty != null">
        #{homepenalty,jdbcType=INTEGER},
      </if>
      <if test="homepenaltyrate != null">
        #{homepenaltyrate,jdbcType=VARCHAR},
      </if>
      <if test="homebackboardf != null">
        #{homebackboardf,jdbcType=INTEGER},
      </if>
      <if test="homebackboardb != null">
        #{homebackboardb,jdbcType=INTEGER},
      </if>
      <if test="homeassists != null">
        #{homeassists,jdbcType=INTEGER},
      </if>
      <if test="homesnatch != null">
        #{homesnatch,jdbcType=INTEGER},
      </if>
      <if test="homeblock != null">
        #{homeblock,jdbcType=INTEGER},
      </if>
      <if test="homefault != null">
        #{homefault,jdbcType=INTEGER},
      </if>
      <if test="awayid != null">
        #{awayid,jdbcType=INTEGER},
      </if>
      <if test="awaybackboard != null">
        #{awaybackboard,jdbcType=INTEGER},
      </if>
      <if test="awayfoul != null">
        #{awayfoul,jdbcType=INTEGER},
      </if>
      <if test="awaythreescore != null">
        #{awaythreescore,jdbcType=INTEGER},
      </if>
      <if test="awaytwoscore != null">
        #{awaytwoscore,jdbcType=INTEGER},
      </if>
      <if test="awaypenalty != null">
        #{awaypenalty,jdbcType=INTEGER},
      </if>
      <if test="awaypenaltyrate != null">
        #{awaypenaltyrate,jdbcType=VARCHAR},
      </if>
      <if test="awaybackboardf != null">
        #{awaybackboardf,jdbcType=INTEGER},
      </if>
      <if test="awaybackboardb != null">
        #{awaybackboardb,jdbcType=INTEGER},
      </if>
      <if test="awayassists != null">
        #{awayassists,jdbcType=INTEGER},
      </if>
      <if test="awaysnatch != null">
        #{awaysnatch,jdbcType=INTEGER},
      </if>
      <if test="awayblock != null">
        #{awayblock,jdbcType=INTEGER},
      </if>
      <if test="awayfault != null">
        #{awayfault,jdbcType=INTEGER},
      </if>
      <if test="matchid != null">
        #{matchid,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.coin.entity.MatchBbtechsExample" resultType="java.lang.Long">
    select count(*) from match_bbtechs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update match_bbtechs
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.homeid != null">
        homeId = #{row.homeid,jdbcType=INTEGER},
      </if>
      <if test="row.homebackboard != null">
        homeBackboard = #{row.homebackboard,jdbcType=INTEGER},
      </if>
      <if test="row.homefoul != null">
        homeFoul = #{row.homefoul,jdbcType=INTEGER},
      </if>
      <if test="row.homethreescore != null">
        homeThreeScore = #{row.homethreescore,jdbcType=INTEGER},
      </if>
      <if test="row.hometwoscore != null">
        homeTwoScore = #{row.hometwoscore,jdbcType=INTEGER},
      </if>
      <if test="row.homepenalty != null">
        homePenalty = #{row.homepenalty,jdbcType=INTEGER},
      </if>
      <if test="row.homepenaltyrate != null">
        homePenaltyRate = #{row.homepenaltyrate,jdbcType=VARCHAR},
      </if>
      <if test="row.homebackboardf != null">
        homeBackboardF = #{row.homebackboardf,jdbcType=INTEGER},
      </if>
      <if test="row.homebackboardb != null">
        homeBackboardB = #{row.homebackboardb,jdbcType=INTEGER},
      </if>
      <if test="row.homeassists != null">
        homeAssists = #{row.homeassists,jdbcType=INTEGER},
      </if>
      <if test="row.homesnatch != null">
        homeSnatch = #{row.homesnatch,jdbcType=INTEGER},
      </if>
      <if test="row.homeblock != null">
        homeBlock = #{row.homeblock,jdbcType=INTEGER},
      </if>
      <if test="row.homefault != null">
        homeFault = #{row.homefault,jdbcType=INTEGER},
      </if>
      <if test="row.awayid != null">
        awayId = #{row.awayid,jdbcType=INTEGER},
      </if>
      <if test="row.awaybackboard != null">
        awayBackboard = #{row.awaybackboard,jdbcType=INTEGER},
      </if>
      <if test="row.awayfoul != null">
        awayFoul = #{row.awayfoul,jdbcType=INTEGER},
      </if>
      <if test="row.awaythreescore != null">
        awayThreeScore = #{row.awaythreescore,jdbcType=INTEGER},
      </if>
      <if test="row.awaytwoscore != null">
        awayTwoScore = #{row.awaytwoscore,jdbcType=INTEGER},
      </if>
      <if test="row.awaypenalty != null">
        awayPenalty = #{row.awaypenalty,jdbcType=INTEGER},
      </if>
      <if test="row.awaypenaltyrate != null">
        awayPenaltyRate = #{row.awaypenaltyrate,jdbcType=VARCHAR},
      </if>
      <if test="row.awaybackboardf != null">
        awayBackboardF = #{row.awaybackboardf,jdbcType=INTEGER},
      </if>
      <if test="row.awaybackboardb != null">
        awayBackboardB = #{row.awaybackboardb,jdbcType=INTEGER},
      </if>
      <if test="row.awayassists != null">
        awayAssists = #{row.awayassists,jdbcType=INTEGER},
      </if>
      <if test="row.awaysnatch != null">
        awaySnatch = #{row.awaysnatch,jdbcType=INTEGER},
      </if>
      <if test="row.awayblock != null">
        awayBlock = #{row.awayblock,jdbcType=INTEGER},
      </if>
      <if test="row.awayfault != null">
        awayFault = #{row.awayfault,jdbcType=INTEGER},
      </if>
      <if test="row.matchid != null">
        matchId = #{row.matchid,jdbcType=INTEGER},
      </if>
      <if test="row.createdAt != null">
        created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updatedAt != null">
        updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update match_bbtechs
    set id = #{row.id,jdbcType=INTEGER},
      homeId = #{row.homeid,jdbcType=INTEGER},
      homeBackboard = #{row.homebackboard,jdbcType=INTEGER},
      homeFoul = #{row.homefoul,jdbcType=INTEGER},
      homeThreeScore = #{row.homethreescore,jdbcType=INTEGER},
      homeTwoScore = #{row.hometwoscore,jdbcType=INTEGER},
      homePenalty = #{row.homepenalty,jdbcType=INTEGER},
      homePenaltyRate = #{row.homepenaltyrate,jdbcType=VARCHAR},
      homeBackboardF = #{row.homebackboardf,jdbcType=INTEGER},
      homeBackboardB = #{row.homebackboardb,jdbcType=INTEGER},
      homeAssists = #{row.homeassists,jdbcType=INTEGER},
      homeSnatch = #{row.homesnatch,jdbcType=INTEGER},
      homeBlock = #{row.homeblock,jdbcType=INTEGER},
      homeFault = #{row.homefault,jdbcType=INTEGER},
      awayId = #{row.awayid,jdbcType=INTEGER},
      awayBackboard = #{row.awaybackboard,jdbcType=INTEGER},
      awayFoul = #{row.awayfoul,jdbcType=INTEGER},
      awayThreeScore = #{row.awaythreescore,jdbcType=INTEGER},
      awayTwoScore = #{row.awaytwoscore,jdbcType=INTEGER},
      awayPenalty = #{row.awaypenalty,jdbcType=INTEGER},
      awayPenaltyRate = #{row.awaypenaltyrate,jdbcType=VARCHAR},
      awayBackboardF = #{row.awaybackboardf,jdbcType=INTEGER},
      awayBackboardB = #{row.awaybackboardb,jdbcType=INTEGER},
      awayAssists = #{row.awayassists,jdbcType=INTEGER},
      awaySnatch = #{row.awaysnatch,jdbcType=INTEGER},
      awayBlock = #{row.awayblock,jdbcType=INTEGER},
      awayFault = #{row.awayfault,jdbcType=INTEGER},
      matchId = #{row.matchid,jdbcType=INTEGER},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.coin.entity.MatchBbtechs">
    update match_bbtechs
    <set>
      <if test="homeid != null">
        homeId = #{homeid,jdbcType=INTEGER},
      </if>
      <if test="homebackboard != null">
        homeBackboard = #{homebackboard,jdbcType=INTEGER},
      </if>
      <if test="homefoul != null">
        homeFoul = #{homefoul,jdbcType=INTEGER},
      </if>
      <if test="homethreescore != null">
        homeThreeScore = #{homethreescore,jdbcType=INTEGER},
      </if>
      <if test="hometwoscore != null">
        homeTwoScore = #{hometwoscore,jdbcType=INTEGER},
      </if>
      <if test="homepenalty != null">
        homePenalty = #{homepenalty,jdbcType=INTEGER},
      </if>
      <if test="homepenaltyrate != null">
        homePenaltyRate = #{homepenaltyrate,jdbcType=VARCHAR},
      </if>
      <if test="homebackboardf != null">
        homeBackboardF = #{homebackboardf,jdbcType=INTEGER},
      </if>
      <if test="homebackboardb != null">
        homeBackboardB = #{homebackboardb,jdbcType=INTEGER},
      </if>
      <if test="homeassists != null">
        homeAssists = #{homeassists,jdbcType=INTEGER},
      </if>
      <if test="homesnatch != null">
        homeSnatch = #{homesnatch,jdbcType=INTEGER},
      </if>
      <if test="homeblock != null">
        homeBlock = #{homeblock,jdbcType=INTEGER},
      </if>
      <if test="homefault != null">
        homeFault = #{homefault,jdbcType=INTEGER},
      </if>
      <if test="awayid != null">
        awayId = #{awayid,jdbcType=INTEGER},
      </if>
      <if test="awaybackboard != null">
        awayBackboard = #{awaybackboard,jdbcType=INTEGER},
      </if>
      <if test="awayfoul != null">
        awayFoul = #{awayfoul,jdbcType=INTEGER},
      </if>
      <if test="awaythreescore != null">
        awayThreeScore = #{awaythreescore,jdbcType=INTEGER},
      </if>
      <if test="awaytwoscore != null">
        awayTwoScore = #{awaytwoscore,jdbcType=INTEGER},
      </if>
      <if test="awaypenalty != null">
        awayPenalty = #{awaypenalty,jdbcType=INTEGER},
      </if>
      <if test="awaypenaltyrate != null">
        awayPenaltyRate = #{awaypenaltyrate,jdbcType=VARCHAR},
      </if>
      <if test="awaybackboardf != null">
        awayBackboardF = #{awaybackboardf,jdbcType=INTEGER},
      </if>
      <if test="awaybackboardb != null">
        awayBackboardB = #{awaybackboardb,jdbcType=INTEGER},
      </if>
      <if test="awayassists != null">
        awayAssists = #{awayassists,jdbcType=INTEGER},
      </if>
      <if test="awaysnatch != null">
        awaySnatch = #{awaysnatch,jdbcType=INTEGER},
      </if>
      <if test="awayblock != null">
        awayBlock = #{awayblock,jdbcType=INTEGER},
      </if>
      <if test="awayfault != null">
        awayFault = #{awayfault,jdbcType=INTEGER},
      </if>
      <if test="matchid != null">
        matchId = #{matchid,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coin.entity.MatchBbtechs">
    update match_bbtechs
    set homeId = #{homeid,jdbcType=INTEGER},
      homeBackboard = #{homebackboard,jdbcType=INTEGER},
      homeFoul = #{homefoul,jdbcType=INTEGER},
      homeThreeScore = #{homethreescore,jdbcType=INTEGER},
      homeTwoScore = #{hometwoscore,jdbcType=INTEGER},
      homePenalty = #{homepenalty,jdbcType=INTEGER},
      homePenaltyRate = #{homepenaltyrate,jdbcType=VARCHAR},
      homeBackboardF = #{homebackboardf,jdbcType=INTEGER},
      homeBackboardB = #{homebackboardb,jdbcType=INTEGER},
      homeAssists = #{homeassists,jdbcType=INTEGER},
      homeSnatch = #{homesnatch,jdbcType=INTEGER},
      homeBlock = #{homeblock,jdbcType=INTEGER},
      homeFault = #{homefault,jdbcType=INTEGER},
      awayId = #{awayid,jdbcType=INTEGER},
      awayBackboard = #{awaybackboard,jdbcType=INTEGER},
      awayFoul = #{awayfoul,jdbcType=INTEGER},
      awayThreeScore = #{awaythreescore,jdbcType=INTEGER},
      awayTwoScore = #{awaytwoscore,jdbcType=INTEGER},
      awayPenalty = #{awaypenalty,jdbcType=INTEGER},
      awayPenaltyRate = #{awaypenaltyrate,jdbcType=VARCHAR},
      awayBackboardF = #{awaybackboardf,jdbcType=INTEGER},
      awayBackboardB = #{awaybackboardb,jdbcType=INTEGER},
      awayAssists = #{awayassists,jdbcType=INTEGER},
      awaySnatch = #{awaysnatch,jdbcType=INTEGER},
      awayBlock = #{awayblock,jdbcType=INTEGER},
      awayFault = #{awayfault,jdbcType=INTEGER},
      matchId = #{matchid,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>