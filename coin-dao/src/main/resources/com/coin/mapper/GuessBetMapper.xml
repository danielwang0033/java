<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coin.mapper.GuessBetMapper">
  <resultMap id="BaseResultMap" type="com.coin.entity.GuessBet">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="guess_id" jdbcType="BIGINT" property="guessId" />
    <result column="guess_item_id" jdbcType="BIGINT" property="guessItemId" />
    <result column="guess_item_name" jdbcType="VARCHAR" property="guessItemName" />
    <result column="bet_amount" jdbcType="DECIMAL" property="betAmount" />
    <result column="bet_odds" jdbcType="DECIMAL" property="betOdds" />
    <result column="settle_pattern" jdbcType="INTEGER" property="settlePattern" />
    <result column="settle_status" jdbcType="INTEGER" property="settleStatus" />
    <result column="award_amount" jdbcType="DECIMAL" property="awardAmount" />
    <result column="settle_amount" jdbcType="DECIMAL" property="settleAmount" />
    <result column="settle_profit" jdbcType="DECIMAL" property="settleProfit" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="settle_note" jdbcType="VARCHAR" property="settleNote" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, user_name, guess_id, guess_item_id, guess_item_name, bet_amount, bet_odds, 
    settle_pattern, settle_status, award_amount, settle_amount, settle_profit, created_at, 
    updated_at, settle_note
  </sql>
  <select id="selectByExample" parameterType="com.coin.entity.GuessBetExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from guess_bet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from guess_bet
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from guess_bet
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.coin.entity.GuessBetExample">
    delete from guess_bet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.coin.entity.GuessBet">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into guess_bet (user_id, user_name, guess_id, 
      guess_item_id, guess_item_name, bet_amount, 
      bet_odds, settle_pattern, settle_status, 
      award_amount, settle_amount, settle_profit, 
      created_at, updated_at, settle_note
      )
    values (#{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{guessId,jdbcType=BIGINT}, 
      #{guessItemId,jdbcType=BIGINT}, #{guessItemName,jdbcType=VARCHAR}, #{betAmount,jdbcType=DECIMAL}, 
      #{betOdds,jdbcType=DECIMAL}, #{settlePattern,jdbcType=INTEGER}, #{settleStatus,jdbcType=INTEGER}, 
      #{awardAmount,jdbcType=DECIMAL}, #{settleAmount,jdbcType=DECIMAL}, #{settleProfit,jdbcType=DECIMAL}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{settleNote,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.coin.entity.GuessBet">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into guess_bet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="guessId != null">
        guess_id,
      </if>
      <if test="guessItemId != null">
        guess_item_id,
      </if>
      <if test="guessItemName != null">
        guess_item_name,
      </if>
      <if test="betAmount != null">
        bet_amount,
      </if>
      <if test="betOdds != null">
        bet_odds,
      </if>
      <if test="settlePattern != null">
        settle_pattern,
      </if>
      <if test="settleStatus != null">
        settle_status,
      </if>
      <if test="awardAmount != null">
        award_amount,
      </if>
      <if test="settleAmount != null">
        settle_amount,
      </if>
      <if test="settleProfit != null">
        settle_profit,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="settleNote != null">
        settle_note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="guessId != null">
        #{guessId,jdbcType=BIGINT},
      </if>
      <if test="guessItemId != null">
        #{guessItemId,jdbcType=BIGINT},
      </if>
      <if test="guessItemName != null">
        #{guessItemName,jdbcType=VARCHAR},
      </if>
      <if test="betAmount != null">
        #{betAmount,jdbcType=DECIMAL},
      </if>
      <if test="betOdds != null">
        #{betOdds,jdbcType=DECIMAL},
      </if>
      <if test="settlePattern != null">
        #{settlePattern,jdbcType=INTEGER},
      </if>
      <if test="settleStatus != null">
        #{settleStatus,jdbcType=INTEGER},
      </if>
      <if test="awardAmount != null">
        #{awardAmount,jdbcType=DECIMAL},
      </if>
      <if test="settleAmount != null">
        #{settleAmount,jdbcType=DECIMAL},
      </if>
      <if test="settleProfit != null">
        #{settleProfit,jdbcType=DECIMAL},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="settleNote != null">
        #{settleNote,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.coin.entity.GuessBetExample" resultType="java.lang.Long">
    select count(*) from guess_bet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update guess_bet
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.userId != null">
        user_id = #{row.userId,jdbcType=BIGINT},
      </if>
      <if test="row.userName != null">
        user_name = #{row.userName,jdbcType=VARCHAR},
      </if>
      <if test="row.guessId != null">
        guess_id = #{row.guessId,jdbcType=BIGINT},
      </if>
      <if test="row.guessItemId != null">
        guess_item_id = #{row.guessItemId,jdbcType=BIGINT},
      </if>
      <if test="row.guessItemName != null">
        guess_item_name = #{row.guessItemName,jdbcType=VARCHAR},
      </if>
      <if test="row.betAmount != null">
        bet_amount = #{row.betAmount,jdbcType=DECIMAL},
      </if>
      <if test="row.betOdds != null">
        bet_odds = #{row.betOdds,jdbcType=DECIMAL},
      </if>
      <if test="row.settlePattern != null">
        settle_pattern = #{row.settlePattern,jdbcType=INTEGER},
      </if>
      <if test="row.settleStatus != null">
        settle_status = #{row.settleStatus,jdbcType=INTEGER},
      </if>
      <if test="row.awardAmount != null">
        award_amount = #{row.awardAmount,jdbcType=DECIMAL},
      </if>
      <if test="row.settleAmount != null">
        settle_amount = #{row.settleAmount,jdbcType=DECIMAL},
      </if>
      <if test="row.settleProfit != null">
        settle_profit = #{row.settleProfit,jdbcType=DECIMAL},
      </if>
      <if test="row.createdAt != null">
        created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updatedAt != null">
        updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.settleNote != null">
        settle_note = #{row.settleNote,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update guess_bet
    set id = #{row.id,jdbcType=BIGINT},
      user_id = #{row.userId,jdbcType=BIGINT},
      user_name = #{row.userName,jdbcType=VARCHAR},
      guess_id = #{row.guessId,jdbcType=BIGINT},
      guess_item_id = #{row.guessItemId,jdbcType=BIGINT},
      guess_item_name = #{row.guessItemName,jdbcType=VARCHAR},
      bet_amount = #{row.betAmount,jdbcType=DECIMAL},
      bet_odds = #{row.betOdds,jdbcType=DECIMAL},
      settle_pattern = #{row.settlePattern,jdbcType=INTEGER},
      settle_status = #{row.settleStatus,jdbcType=INTEGER},
      award_amount = #{row.awardAmount,jdbcType=DECIMAL},
      settle_amount = #{row.settleAmount,jdbcType=DECIMAL},
      settle_profit = #{row.settleProfit,jdbcType=DECIMAL},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      settle_note = #{row.settleNote,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.coin.entity.GuessBet">
    update guess_bet
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="guessId != null">
        guess_id = #{guessId,jdbcType=BIGINT},
      </if>
      <if test="guessItemId != null">
        guess_item_id = #{guessItemId,jdbcType=BIGINT},
      </if>
      <if test="guessItemName != null">
        guess_item_name = #{guessItemName,jdbcType=VARCHAR},
      </if>
      <if test="betAmount != null">
        bet_amount = #{betAmount,jdbcType=DECIMAL},
      </if>
      <if test="betOdds != null">
        bet_odds = #{betOdds,jdbcType=DECIMAL},
      </if>
      <if test="settlePattern != null">
        settle_pattern = #{settlePattern,jdbcType=INTEGER},
      </if>
      <if test="settleStatus != null">
        settle_status = #{settleStatus,jdbcType=INTEGER},
      </if>
      <if test="awardAmount != null">
        award_amount = #{awardAmount,jdbcType=DECIMAL},
      </if>
      <if test="settleAmount != null">
        settle_amount = #{settleAmount,jdbcType=DECIMAL},
      </if>
      <if test="settleProfit != null">
        settle_profit = #{settleProfit,jdbcType=DECIMAL},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="settleNote != null">
        settle_note = #{settleNote,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coin.entity.GuessBet">
    update guess_bet
    set user_id = #{userId,jdbcType=BIGINT},
      user_name = #{userName,jdbcType=VARCHAR},
      guess_id = #{guessId,jdbcType=BIGINT},
      guess_item_id = #{guessItemId,jdbcType=BIGINT},
      guess_item_name = #{guessItemName,jdbcType=VARCHAR},
      bet_amount = #{betAmount,jdbcType=DECIMAL},
      bet_odds = #{betOdds,jdbcType=DECIMAL},
      settle_pattern = #{settlePattern,jdbcType=INTEGER},
      settle_status = #{settleStatus,jdbcType=INTEGER},
      award_amount = #{awardAmount,jdbcType=DECIMAL},
      settle_amount = #{settleAmount,jdbcType=DECIMAL},
      settle_profit = #{settleProfit,jdbcType=DECIMAL},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      settle_note = #{settleNote,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>